buildscript {
	repositories {
		maven {url = 'https://maven.minecraftforge.net'}
		maven {url = 'https://repo.spongepowered.org/repository/maven-public/'}
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "${rootProject.name}-forge-${project.minecraftVersion}"

dependencies {
	minecraft "net.minecraftforge:forge:${project.forgeVersion}"
	annotationProcessor "org.spongepowered:mixin:0.8.4-SNAPSHOT:processor"
	compileOnly project(":Common")
	
	def botania = implementation "vazkii.botania:Botania:${project.botaniaVersion}"
	if (project.declareBotaniaAsChanging == "true" && botania instanceof ExternalModuleDependency) {
		((ExternalModuleDependency) botania).changing = true
	}
	
	//botania-forge's transitive dependencies as of Aug 20, 2022; https://github.com/VazkiiMods/Botania/blob/05e734c439d1b77985f4cb9a9b1cf414ceebbdbf/Forge/build.gradle
	//Botania does not (currently) publish transitive dependency information for its artifacts.
	
	//Actually use a newer patchouli, to test https://github.com/quat1024/incorporeal-3/issues/13
	// (at least on forge, getting this into the fabric arm would be handy)
	implementation "vazkii.patchouli:Patchouli:1.18.2-71.1"
	
	compileOnly "mezz.jei:jei-1.18.2:9.4.3.122:api"
	runtimeOnly "mezz.jei:jei-1.18.2:9.4.3.122"
	compileOnly "top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3:api"
	runtimeOnly "top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3"
	compileOnly "com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:9.1.123"
	compileOnly "com.unascribed:ears-api:1.4.5"
}

mixin {
	add sourceSets.main, "${project.modId}.refmap.json"
	
	config "${project.modId}.mixin.common.json"
	config "${project.modId}.mixin.forge.json"
}

minecraft {
	mappings channel: 'official', version: project.minecraftVersion
	
	runs {
		client {
			workingDirectory file('./run')
			property 'forge.logging.console.level', 'debug'
			property 'fml.earlyprogresswindow', 'false'
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				incorporeal3 {
					source sourceSets.main
					source project(":Common").sourceSets.main
				}
			}
		}
		
		server {
			workingDirectory file('./run')
			property 'forge.logging.console.level', 'debug'
			property 'fml.earlyprogresswindow', 'false'
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				incorporeal3 {
					source sourceSets.main
					source project(":Common").sourceSets.main
				}
			}
		}
	}
}

//fold in xplat resources and sources
processResources {
	from project(":Common").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
	source(project(":Common").sourceSets.main.allSource)
}